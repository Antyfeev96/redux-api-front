{"version":3,"sources":["Reducers/Reducers.js","API.js","Components/Spinner/Spinner.jsx","Components/Error/Error.jsx","Components/ItemsList/ItemsList.jsx","Components/MainPage/MainPage.jsx","Components/Form/EditForm.jsx","App.jsx","reportWebVitals.js","Store/index.js","index.jsx"],"names":["initialState","name","price","content","editedId","filterString","list","filteredList","error","loading","toolkitSlice","createSlice","reducers","fetchServicesRequest","state","fetchServiceSuccess","action","console","log","payload","fetchServicesSuccess","fetchServicesError","setList","length","addItem","push","id","nanoid","editItem","value","removeItem","filter","item","changeInputField","changeEditedId","saveEditedItem","map","applyFilter","toLowerCase","changeFilteredList","includes","actions","API","this","url","a","fetch","method","headers","data","body","JSON","stringify","rotate360","keyframes","StyledSpinner","styled","div","Spinner","StyledError","Error","api","List","ul","fetchServices","dispatch","fetchItems","response","ok","statusText","json","message","deleteService","deleteItem","ItemsList","useSelector","myState","useDispatch","match","useRouteMatch","useEffect","handleEdit","handleRemove","className","to","onClick","MainPage","Form","form","NameInput","input","PriceInput","ContentInput","Button","button","fetchService","getItem","saveService","saveItem","EditForm","history","useHistory","clearInputs","handleChange","event","target","onSubmit","preventDefault","goBack","onChange","type","Container","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab5c7d70.chunk.js","sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst list = []\r\n\r\nconst filteredList = []\r\n\r\nconst initialState = {\r\n  name: '',\r\n  price: '',\r\n  content: '',\r\n  editedId: null,\r\n  filterString: '',\r\n  list,\r\n  filteredList,\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const toolkitSlice = createSlice({\r\n  name: 'myState',\r\n\r\n  initialState,\r\n\r\n  reducers: {\r\n    fetchServicesRequest(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchServiceSuccess(state, action) {\r\n      console.log(action.payload)\r\n      const { name, price, content } = action.payload;\r\n      return state = {...state, name, price, content, loading: false, error: null}\r\n    },\r\n    fetchServicesSuccess(state, action) {\r\n      const list = action.payload;\r\n      return state = {...state, list, filteredList: list, loading: false, error: null}\r\n    },\r\n    fetchServicesError(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    setList(state, action) {\r\n      if (state.list.length !== 0) return;\r\n      state.list = action.payload;\r\n    },\r\n    addItem(state, action) {\r\n      const { name, price } = action.payload;\r\n      state.list.push({ id: nanoid(), name, price })\r\n    },\r\n    editItem(state, action) {\r\n      const { name, value } = action.payload;\r\n      state.name = name;\r\n      state.price = value\r\n    },\r\n    removeItem(state, action) {\r\n      const { id } = action.payload;\r\n      state.list = state.list.filter(item => item.id !== id)\r\n    },\r\n    changeInputField(state, action) {\r\n      const { name, value } = action.payload;\r\n      state[name] = value;\r\n    },\r\n    changeEditedId(state, action) {\r\n      state.editedId = action.payload;\r\n    },\r\n    saveEditedItem(state, action) {\r\n      const { name, price } = action.payload;\r\n      state.list = state.list.map(item => {\r\n        if (item.id === state.editedId) {\r\n          item.name = name;\r\n          item.price = price\r\n        }\r\n        return item;\r\n      })\r\n    },\r\n    applyFilter(state, action) {\r\n      state.filterString = action.payload.toLowerCase();\r\n    },\r\n    changeFilteredList(state) {\r\n      state.filteredList = [...state.list.filter(item => item.name.toLowerCase().includes(state.filterString))];\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport default toolkitSlice.reducer;\r\nexport const { addItem, editItem, removeItem, changeInputField, changeEditedId, saveEditedItem, applyFilter, changeFilteredList, setList, fetchServicesRequest, fetchServiceSuccess, fetchServicesSuccess, fetchServicesError } = toolkitSlice.actions;","export default class API {\r\n  constructor() {\r\n    this.url = 'http://localhost:7070/api';\r\n  }\r\n\r\n  async fetchItems() {\r\n    try {\r\n      return await fetch(`${this.url}/services`);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async deleteItem(id) {\r\n    try {\r\n      await fetch(`${this.url}/services/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      return await fetch(`${this.url}/services`);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async getItem(id) {\r\n    try {\r\n      return await fetch(`${this.url}/services/${id}`);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async saveItem(data) {\r\n    try {\r\n      return await fetch(`${this.url}/services`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      });\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}","import styled, { keyframes } from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst StyledSpinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n  \r\n  margin: 0 auto;\r\n  border-top: 2px solid grey;\r\n  border-right: 2px solid grey;\r\n  border-bottom: 2px solid grey;\r\n  border-left: 4px solid black;\r\n  background: transparent;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <StyledSpinner/>\r\n    )\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledError = styled.div`\r\n    height: 100px; \r\n    padding: 15px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    background-color: red;\r\n    color: white;\r\n`;\r\n\r\nconst Error = () => {\r\n    return (\r\n        <StyledError>\r\n            Произошла ошибка! <br/>\r\n            Проверьте соединение и обновите страницу\r\n        </StyledError>\r\n    );\r\n};\r\n\r\nexport default Error;","import styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  changeEditedId,\r\n  fetchServicesRequest,\r\n  fetchServicesSuccess,\r\n  fetchServicesError,\r\n} from '../../Reducers/Reducers';\r\nimport React, { useEffect } from \"react\";\r\nimport API from \"../../API\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Error from \"../Error/Error\";\r\nimport { Link, useRouteMatch, } from \"react-router-dom\";\r\n\r\nconst api = new API();\r\n\r\nconst List = styled.ul`\r\n  margin-top: 25px;\r\n  padding: 15px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n\r\n  & .item:nth-of-type(n + 2) {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  & .item {\r\n    button {\r\n      margin-left: 15px;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst fetchServices = async dispatch => {\r\n  dispatch(fetchServicesRequest());\r\n  try {\r\n    const response = await api.fetchItems();\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    const data = await response.json();\r\n    dispatch(fetchServicesSuccess(data));\r\n  } catch(e) {\r\n    dispatch(fetchServicesError(e.message));\r\n  }\r\n}\r\n\r\nconst deleteService = async (dispatch, id) => {\r\n  dispatch(fetchServicesRequest());\r\n  try {\r\n    const response = await api.deleteItem(id);;\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    const data = await response.json();\r\n    dispatch(fetchServicesSuccess(data));\r\n  } catch(e) {\r\n    dispatch(fetchServicesError(e.message));\r\n  }\r\n}\r\n\r\nexport default function ItemsList() {\r\n  const state = useSelector(state => state.myState);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchServices(dispatch);\r\n  }, [dispatch])\r\n\r\n\r\n  const handleEdit = async (name, value, id) => {\r\n    dispatch(changeEditedId(+id))\r\n  }\r\n\r\n  const handleRemove = async id => {\r\n    await deleteService(dispatch, id)\r\n  }\r\n\r\n  return (\r\n   <List>\r\n     {(state.error && <Error/>) || (state.loading ? <Spinner /> : state.list.map(item =>\r\n        <li key={item.id} className=\"item\">\r\n        {item.name} {item.price} <span>₽</span>\r\n        <Link to={`${match.url}/${item.id}`}>\r\n          <button onClick={() => handleEdit(item.name, item.price, item.id)}>✎</button>\r\n        </Link>\r\n        <button onClick={() => handleRemove(item.id)}>✕</button>\r\n        </li>))}\r\n   </List>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ItemsList from \"../ItemsList/ItemsList\";\r\n\r\nfunction MainPage() {\r\n  return <ItemsList />;\r\n}\r\n\r\nexport default MainPage;","import styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeInputField,\r\n  changeEditedId,\r\n  changeFilteredList,\r\n  fetchServicesRequest, fetchServiceSuccess, fetchServicesError\r\n} from '../../Reducers/Reducers';\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport Error from \"../Error/Error\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport API from \"../../API\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst api = new API();\r\n\r\nconst Form = styled.form`\r\n  input {\r\n    display: block;\r\n    padding: 2px;\r\n    margin-top: 15px;\r\n    width: 200px;\r\n  }\r\n  \r\n  .form__buttons {\r\n    margin-top: 15px;\r\n    \r\n    & button:nth-of-type(n + 2) {\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n`\r\n\r\nconst NameInput = styled.input``\r\n\r\nconst PriceInput = styled.input``\r\n\r\nconst ContentInput = styled.input``\r\n\r\nconst Button = styled.button`\r\n  padding: 5px;\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n`\r\n\r\nconst fetchService = async (dispatch, id) => {\r\n  dispatch(fetchServicesRequest());\r\n  try {\r\n    const response = await api.getItem(id);\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    const data = await response.json();\r\n    await dispatch(fetchServiceSuccess(data));\r\n  } catch(e) {\r\n    dispatch(fetchServicesError(e.message));\r\n  }\r\n}\r\n\r\nconst saveService = async (dispatch, data) => {\r\n  dispatch(fetchServicesRequest())\r\n  try {\r\n    const response = await api.saveItem(data);\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    dispatch(fetchServicesRequest());\r\n  } catch(e) {\r\n    dispatch(fetchServicesError(e.message));\r\n  }\r\n}\r\n\r\nexport default function EditForm() {\r\n  const state = useSelector(state => state.myState);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchService(dispatch, state.editedId)\r\n  },[dispatch, state.editedId])\r\n\r\n  const clearInputs = () => {\r\n    dispatch(changeInputField({ name: 'name', value: '' }));\r\n    dispatch(changeInputField({ name: 'price', value: '' }));\r\n    dispatch(changeInputField({ name: 'content', value: '' }));\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    dispatch(changeInputField({ name, value }));\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { editedId, name, price, content } = state\r\n    saveService(dispatch, { id: editedId, name, price, content })\r\n    history.goBack();\r\n    dispatch(changeFilteredList())\r\n    clearInputs();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.goBack()\r\n    dispatch(changeEditedId(null));\r\n    clearInputs();\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        {(state.error && <Error/>) || (state.loading ? <Spinner /> :\r\n            <Form className=\"form\" onSubmit={handleSubmit}>\r\n              <div>Название</div>\r\n              <NameInput className=\"form__name\" name='name' onChange={handleChange} value={state.name}/>\r\n              <div>Стоимость</div>\r\n              <PriceInput className=\"form__price\" name='price' onChange={handleChange} value={state.price}/>\r\n              <div>Описание</div>\r\n              <ContentInput className=\"form__description\" name='content' onChange={handleChange} value={state.content}/>\r\n              <div className=\"form__buttons\">\r\n                <Button className=\"form__cancel\" onClick={handleCancel} type='button'>Cancel</Button>\r\n                <Button className=\"form__button\" type='submit'>Save</Button>\r\n              </div>\r\n            </Form>)}\r\n      </Fragment>\r\n  )\r\n}\r\n","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport styled from 'styled-components';\nimport React from \"react\";\nimport MainPage from \"./Components/MainPage/MainPage\";\nimport { Redirect } from \"react-router-dom\";\nimport EditForm from \"./Components/Form/EditForm\";\n\nconst Container = styled.div`\n  width: 50%;\n  margin: 100px auto 0 auto;\n`\n\nfunction App() {\n  return (\n    <Router>\n      <Container className=\"app\">\n        <Redirect to=\"/services\" />\n        <Switch>\n            <Route path='/services/:id'>\n                <EditForm/>\n            </Route>\n            <Route path='/services'>\n              <MainPage />\n            </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport toolkitSlice from '../Reducers/Reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  myState: toolkitSlice\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: true,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}